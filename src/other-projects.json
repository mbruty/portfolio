[
  {
    "name": "AirBnb Visualisation",
    "shortName": "AirBnb Visualisation",
    "image": ["https://i.imgur.com/uuvDW4e.jpg"],
    "icon": "hotel",
    "info": "### Results: Top in year - 95%\n### The task:\n- Using the provided data, read the data in using a proper datastructure. \nThe user needs to be able to search, update, create new and delete a property / neighbourhood / district.\n- Any changes to the data needs to be automatically saved.\n- Data needs to be visualised graphically without using any in-built C# libraries or tools.\n### Problems faced / solutions:\n- On form load, the program was unresponsive for a few seconds whilst everything was loaded and calculated. This was because the whole program ran on a sinlge thread. The first solution to this was to limit the calculations made, so calculations like the average price weren't run until after all the data was loaded and the form was running. The second solution was to run the graph calculations on different threads. This is why on start-up, the map and graphs turn visable after a few seconds.\n- When creating bar graphs, the point ( 0 , 0 ) is the top left, rather than the bottom right in traditional mathematics. The original solution I had was to do all the calculations and draw the graph, then rotate it 180Â° to display it properly. On reflection, I could have used the point (this.Bottom , this.Left ) as the origin, this would have stopped the need to rotate it.\n### Further improvments\n- To speed up the execution time of the program, I could have created some form of cache to keep each graph. This would stop the need to re-calculate each graph every time a user changes district. \n- (Update 5 months after submission) : Now that I have learnt asyncronus C#, I realised that alot of the processes were ran on the main thread, locking-up the UI. If I were to do this again, I would have used Tasks as to not lock the main thread and make the program feel much more responsive\n- The graphs would have been easier to read if the width was adjusted so that more could have been seen on one panel, possibly having another window to view it better?\n- The graphs could've been user-sortable i.e. high => low \n- Graph sorting by distance would've also been nice, but WAY out of the specification\n- Tooltips when mousing over graph to show the value of the item you've moused over",
    "url": "https://github.com/mbruty/SOFT152-AirBnb-DataVisualisation",
    "language": "C#",
    "material": true
  },
  {
    "name": "WinForms Social Network",
    "shortName": "WinForms Social Network",
    "image": [
      "https://i.imgur.com/o7zu21J.jpg",
      "https://i.imgur.com/YSCQLZC.jpg",
      "https://i.imgur.com/ZOkn6GM.jpg",
      "https://i.imgur.com/9fHgx4a.jpg"
    ],
    "icon": "group_add",
    "info": "##Result: 92%\n##The Task:\n- Create a relational database using a provided MySQL server using the provided data\n- Fill-in gaps in the data with mock-data\n- Create a WinForms C# application to interface with the database\n- Create UML Diagrams to represent the whole model\n- Extract user stories from a given scenario\n##My solution:\n- Fully asynchronous C# for communicating to the SQL server (Rest API was not required) => This made sure the application did not freeze whilst retrieving data from the server.\n- Basic but functional UI => There were no marks available for user interface, but user feedback and user focused design were still taken in to account.\n- A MVP solution with all of the functionality from the user stories.\n-  Python script for automated creation of missing data and upload of all the data. This sped-up the upload from 6 hours to 1 hour 40 mins.\n- UML Diagrams are contained within the 'Diagrams' folder on the GitHub repo, you can view this by clicking the 'View Code' button at the top of the page.\n \n### Problems / Solutions\n- Form felt slow when retrieving data => convert code base to asynchronous code to ensure UI thread wasn't blocked\n- User's were automatically added as friends, rather than accepting / denying => Despite this being outside of the expectation for the assessment, friend requests were made stateful.",
    "url": "https://github.com/mbruty/ISAD157-Mock-Facebook-Databse-Task",
    "language": "C#, MySQL",
    "material": true
  },
  {
    "name": "HUE Says",
    "shortName": "HUE Says",
    "icon": "videogame_asset",
    "language": "js, javascript, HTML, css",
    "url": "https://github.com/mbruty/SOFT166-HUE-Says",
    "image": [],
    "info": "\nWelcome to the HUE says memory game.\n## The game\nNavigate to the game page to get started. Watch the YouTube video above to see how to play the game.\n\nTo play the game, click the **Start game** button, this will show the sequence, just click the same buttons that light up to win!\n\nTicking the **Auto Play** box will automatically start the next sequence on completion.\n### Settings\nIn settings you can change the light you use, change the difficulty and reset the high score\n\nThe difficulty speeds in Ms are as follows:\n\n - Easy : 1100\n - Medium : 800\n - Hard : 500\n - Extra Hard : 200\n\n*Note: For the lights to work, you need to log-in to a computer in **SMB109** or change the **setLightURI** function in **game.js** to use the lights on your home network.**\n\n### How the lights will change during the game\n\n\nOnce you hit the **Start Game** button, the colour sequence is played on the lights.\n*Note : If the network is slow, the lights MAY not work on Extra Hard*\n\nOnce you start entering the sequence, the **Selected light** will turn green\nIf you enter a wrong combination, the lights will flash red for a few seconds.\n\n### High scores\n\nThe high score for the game will update once you get a sequence wrong and the game resets. The *session high score* will reset if you re-load the web browser. The *All-time high score* will only reset if you click the **Reset High Score** button in settings or clear your browsers cache\n\n**Note: None of your data will be saved online OR will be access able by anyone else**\n\n### Controlling the lights\n\nHere you can control the lights with a push of a button.\nIt will set all lights to a colour, turn them all on or all off.\n\n### Set Light Colour\nThis will allow you to control the specific HUE value of a single light. \n*The light can be selected on the left*\n\nThe hue value is a number between 0 and 55000.\n\n## Web Accessibility\n- Colour blindness\nA large problem with creating a colour memory game is that colour-blind people cannot use it. I decided to tackle this problem by indicating which button is changing during the sequence, so if you cannot distinguish colours, you'll just have to remember the order that the buttons flash!\nNowhere is colour exclusively used to show the form of a button, it always has text supporting it.\n\n- Text contrast\nText contrast is very important, it can stop a visually impaired user from using the website out right. Almost all of the text is black on a white background, which is the best contrast possible. Where text is not black-on-white i.e. on buttons, the contrast is taken in to account and is enough to meet standards.\n- Text size\nThe text size isn't as big as it could be for users who are visually impaired, but the website works exactly the same when zoomed in upon.\n\n### WCAG1.0\n- Guideline 1: No audio content included, visual assistance couldn't be given as the game wouldn't work if the user is blind,\n- Guideline 2: Colour only shows form and text is always used as well as colour.\n- Guideline 3: Bootstrap default style sheet is used\n- Guideline 4: Language is clear under explanations; very little understanding of English is needed to operate the game fully.\n- Guideline 5: All tables transform and stay together upon resizing.\n- Guideline 6: The whole website has a dynamic style.\n- Guideline 7: No changes are time-sensitive on the website.\n- Guideline 8: There are no embedded UI's.\n- Guideline 9: The website is designed to be used on any computer and browser and can work on phone sized screens too.\n- Guideline 10: The only text box is empty, however has a clear title on what it is used for.\n- Guideline 11: Template was from Bootstrap which should use W3C guidelines.\n- Guideline 12: Context is always shown to the user as indicated by the highlighted item on the search bar\n- Guideline 13: Navigation bar is clear and always accessible.\n- Guideline 14: Lay-out is clear, clean and simple.\n\n## Supported browsers\nAll browsers that can run JavaScript are supported, Chrome and Firefox have been tested and work as you can see from the video.",
    "material": true
  }
]
